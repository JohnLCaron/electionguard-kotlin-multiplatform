syntax = "proto3";

import "common.proto";

option java_package = "electionguard.protogen";
option java_outer_classname = "TrusteeProto";

message DecryptingTrustee {
  string guardian_id = 1;
  uint32 guardian_x_coordinate = 2;     // the x coefficient (sequence_order), must be > 0
  ElementModP public_key = 5;     // Guardian's private and public key
  ElementModQ key_share = 6;      // My share of the election key, P(i)
}

message EncryptedKeyShare {
  uint32 owner_xcoord = 6; // guardian i (owns the polynomial Pi) x coord
  string polynomial_owner = 1; // guardian i (owns the polynomial Pi) name
  string secret_share_for = 2; // The Id of the guardian to receive this (ℓ)
  // Pi(ℓ)= The generatingGuardian's polynomial value at designatedGuardianXCoordinate
  // This is the encryption = Eℓ (Pi(ℓ)), see spec 1.9 eq 17.
  HashedElGamalCiphertext encrypted_coordinate = 5;
}