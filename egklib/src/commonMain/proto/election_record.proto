syntax = "proto3";

import "encrypted_tally.proto";
import "common.proto";
import "decrypted_tally.proto";

option java_package = "electionguard.protogen";
option java_outer_classname = "ElectionRecordProto";

// Election Configuration, before the KeyCeremony
message ElectionConfig {
  string spec_version = 1; // specification version
  ElectionConstants constants = 2;
  uint32 number_of_guardians = 3; // n, the number of guardians necessary to generate the public key
  uint32 quorum = 4; // k, the quorum of guardians necessary to decrypt an election.  Must be <= number_of_guardians.
  string election_date = 5; // for election base hash
  string jurisdiction_info = 6; // for election base hash
  UInt256 parameter_base_hash = 7; // Hp
  UInt256 manifest_hash = 8;       // Hm
  UInt256 election_base_hash = 9;  // He
  bytes manifest_bytes = 10; // the original source of the manifest
  map<string, string> metadata = 11; // arbitrary metadata added by the software
}

// The constants for mathematical functions during the election.
message ElectionConstants {
  string name = 5;
  bytes large_prime = 1; // large prime or p
  bytes small_prime = 2; // small prime or q
  bytes cofactor = 3;    // cofactor or r
  bytes generator = 4;   // generator or g
}

// Election Initialization, after the KeyCeremony
message ElectionInitialized {
  ElectionConfig config = 1;
  ElementModP joint_public_key = 2; // K
  UInt256 extended_base_hash = 3; // He
  repeated Guardian guardians = 4; // public information about the Guardians / Trustees
  map<string, string> metadata = 5; // arbitrary metadata added by the software
}

// Public info for Guardians
message Guardian {
  string guardian_id = 1;     // guardian id
  uint32 x_coordinate = 2;    // x coordinate in the secret polynomial. must be > 0
  repeated SchnorrProof coefficient_proofs = 3;  // size = quorum (k)
}

message TallyResult {
  ElectionInitialized election_init = 1;
  EncryptedTally encrypted_tally = 2;
  repeated string ballot_ids = 3;
  repeated string tally_ids = 4;
  map<string, string> metadata = 5;
}

message DecryptionResult {
  TallyResult tally_result = 1;
  DecryptedTallyOrBallot decrypted_tally = 2;
  map<string, string> metadata = 3;
}